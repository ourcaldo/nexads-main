Replit, I have an automation based on python and camoufox browser. The automation is on core directory. I need you to deep dive the codebase, so you have better understanding of the file structure, the logic, how to run it and other things that may I need you to do at the future.

To run it on my ubuntu server, i always edit the config.json directly, because as you know ubuntu didn't have the screen so I can't edit the config using UI and to run it on the background, I always make script.service so I can close the ssh but the automation still run.

To re-run and edit the config, I've always to do it manually, so open the ubuntu, stop the running, do edit and re-run it again.

For that, i need you to help me to make an frontend and backend for this automation.

So, from the frontend I can start, pause and stop the automation from the frontend, also I can edit the config and proxy, then we pass it into the backend via fastAPI then the backend will do a thing.

To do that, I need you to make a script python or something, that we'll be generate the env based on response input to get the:
Domain: domain like google.com or localhost (localhost use IP automatically, not litterely localhost)
Frontend port: [default is 4000]
Backend port: [default is 8000]
SSL: default yes if using domain.com, if using ip/localhost, then not.

After .env is generated, then we'll use that. Also, from the script please automate instalation the depedencies from the main automation, args, dependcies for the backend and frontend, setting up the nginx and certbot (if using ssl true). Please keep in mind to delete/stop the resource that generated/installed from previous script deploy like the nginx, ssl, port that used and etc, but don't touch any configuration that isn't have correlacy with this nexads project. For example, if before we already setting conf, and I want to redeploy then stop the port, delete conf and other things.

After that, the automatic script will be start the backend and frontend on the background using pm2 or something similar.

Keep in mind, please use production, not development, so I didn't need seperate variable or setting between development and production. Then, for backend api, please use "/api" so will be IP:port/api if using localhost/ip or domain.com/api if using domain.

Please make bakcend and folder on different directory, so the directory will be
nexads-main
 - core
 - backend
 - frontend
 - .env file
 - script to run it automatically
I will not run this on replit enviromnt, but I'll test it on my ubuntu server, so don't making mess.

Anyway, please when we pass the start command from the frontend, still using script.service or similar approach so the automation can still running on the background and when we pass pause then it'll pause, when stop the script will be stopped and the script will be deleted.

We can also edit the config from frontend, but please make the setting field based on the config.json, so not edit littereley the json file. But, we'll pass the setting into backend and will be update value in json file.

Example of the json you can directly see on the config.json or from file that I've pasted below:
{
"proxy": {
"type": "http",
"credentials": "",
"file": "proxy.txt"
},
"browser": {
"headless_mode": "True",
"disable_ublock": true,
"random_activity": true,
"auto_accept_cookies": true,
"prevent_redirects": true,
"activities": [
"scroll",
"hover",
"click"
]
},
"delay": {
"min_time": 3,
"max_time": 10
},
"session": {
"enabled": true,
"count": 0,
"max_time": 100
},
"threads": 1,
"os_fingerprint": [
"windows",
"macos",
"linux"
],
"device_type": {
"mobile": 70,
"desktop": 30
},
"referrer": {
"types": [
"random"
],
"organic_keywords": "How Insurance Adjusters Review Injury Claims Without Missing a Detail\nHow a Lawyer Can Help You Get a Higher Insurance Settlement Offer camar"
},
"urls": [
{
"url": "google.com",
"random_page": false,
"min_time": 30,
"max_time": 60
}
],
"ads": {
"ctr": 1.0,
"min_time": 30,
"max_time": 60
}
}

For the proxy, we can input proxy (new line formatted/1 proxy 1 line) then pass it to the proxy.txt.

For the panel dashboard, please make it interactive with login authentication, no index and no crawlable. For authentication please using (you can also set this up in env).
username: admin
password: admin123